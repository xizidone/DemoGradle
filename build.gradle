plugins {
    id 'java'
}

ext{
    orikaVersion = '1.5.4'
}

group 'org.example'
version '1.0-SNAPSHOT'

dependencies {

    implementation("ma.glasnost.orika:orika-core:1.5.4")

    implementation group: 'ma.glasnost.orika', name: 'orika-core', version: "${orikaVersion}"
    implementation 'org.springframework:spring-expression:4.0.5.RELEASE'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation fileTree('dir': 'sdk', include: ['*.jar'])
    implementation group: 'org.zeromq', name: 'jeromq', version: '0.5.3'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.12'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.21.12'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.8'
    implementation group: 'cn.hutool', name: 'hutool-all', version: '5.7.11'
    implementation group: 'io.vavr', name: 'vavr', version: '0.10.3'


    implementation 'com.github.xiaoymin:knife4j-openapi3-spring-boot-starter:4.1.0'

    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.8'

}



def pkgDir = "${rootDir}\\${project.name}"
tasks.named("clean") {
    doFirst {

        delete(pkgDir)
    }

}

tasks.named("build") {
    dependsOn("pkg")
}


tasks.register("pkg") {
    group = "build"
    dependsOn(subprojects.tasks.build)

    doLast {
        println(pkgDir)
        delete(pkgDir)
        mkdir(pkgDir)

        copy {
            from("${project.rootDir}/scripts")
            include("ic.config.js")
            into(pkgDir)
        }
        copy {
            from("${project.rootDir}/scripts")
            into("${pkgDir}/scripts")
        }
        copy {
            from("${project.rootDir}/build/libs")
            exclude("*-plain.jar")
            into("${pkgDir}/bin")
        }
        copy {
            from("${project.buildDir}/resources/main/META-INF/build-info.properties")
            into(pkgDir)
        }
    }
}